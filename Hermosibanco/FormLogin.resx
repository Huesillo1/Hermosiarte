<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbMinimize.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAW8SURBVHhe7d1BSpVhHMVhh4rQGiKdOXExhUsSNyDRggqcCO5BNByGYA2sc+AOJF6xRMrve58H
        fkv4H67ee7+7BQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALNJuOkqn6Sxdpfv0U5L+U92gblE3qdvUjepWAS9gL31Mt2l0gJL0mupWdbO6XcAz7KTj9D2N
        jkySXnPdrm5Ytwz4Q/vpPI2OSpKWVLesmwY84SBdptEhSdIS+5oOE/CIt+k6jQ5IkpbcTfKfABjYThdp
        dDiStIa6cd064IGTNDoYSVpT3Tpgo//692l/STP0I/mKIGx8SqNDkaQ11s2D6b1J39LoSCRpjXXzun0w
        tQ9pdCCStObeJ5haH5k5Og5JWnPdPpjalzQ6Dklac58TTK1PyBodhyStuW4fTM3X/yTN2F2CqXkBIGnG
        vABget4CkDRj3gJgej4EKGnGfAiQ6fkaoKQZ8zVApudBQJJmzIOAmJ5HAUuaLY8Chg0/BiRppvwYEGz0
        54D7lZjRoUjSmurPAb9LwMZJGh2LJK2pbh3wwHa6SKODkaQ11I3r1gG/6VsB12l0OJK05G7SfgIecZAu
        0+iAJGmJ9al/hwl4Ql8ln6fRIUnSkuqW+csf/sJOOk5+LEjSEut2dcO6ZcAz7KU+MvM2jY5Mkl5T3apu
        VrcLeAG76SidprN0le7T6AAl6V/UDeoWdZO6Td2obhUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALAoW1u/AJ9v/d95HUb1AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pbClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>